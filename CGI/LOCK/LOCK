#!/bin/bash -vx
#

########################################
#	LOCK.CGI
#
#   引数
#       $1:必須 カテゴリ名、またはロックファイルのパス(LOCK配下はデフォルト)
#       $2:任意 固有キー(社員番号など) デフォルト:KEY
#   戻り値
#       YYYYMMDD.HHMMSS.プロセスID.ステータス.固有キー
#
#	Written by hiramatsu


########################################
#Set basic
SYSD=/home/sureshotsystem
PID=$$
DATE_TIME_PID=$(date +%Y%m%d).$(date +%H%M%S).${PID}
exec 2> ${SYSD}/LOG/LOG.$(basename $0).${DATE_TIME_PID}
LANG=ja_JP.UTF-8
PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
LOCKD=${SYSD}/LOCK/$1
KEY=${2:-KEY}


########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
    echo "LOCK_ERROR"
	exit 1
}

########################################
#指定カテゴリにロックファイルがなければロックファイルを作成し、
#ロックファイルがある場合、最長〇〇秒までウェイティングする
COUNT=1
while :
do
    if [ -e ${LOCKD}/*.${KEY}.lock ]; then
        sleep 1s
        STATUS='WAITING'
    else
        touch ${LOCKD}/${DATE_TIME_PID}.${KEY}.lock
        ERROR_CHECK
        STATUS='LOCKED'
        break
    fi
    COUNT=$(( COUNT + 1 ))
    if [ ${COUNT} -gt 20 ] ; then
        STATUS='WAITE_ERROR'
        break
    fi
done

########################################
#戻り値
echo ${DATE_TIME_PID}.${STATUS}.${KEY}

########################################
#正常終了
exit 0
