#!/bin/bash -vx
#

########################################
#	LOCK.CGI
#
#   引数
#       $1:プロセスID
#       $2:必須 カテゴリ名、またはロックファイルのパス(LOCK配下はデフォルト)
#       $3:任意 固有キー(社員番号など) デフォルト:KEY
#   戻り値
#       YYYYMMDD.HHMMSS.プロセスID.ステータス.固有キー
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=/home/sureshotsystem
PID=$1
DATE_TIME_PID=$(date +%Y%m%d).$(date +%H%M%S).${PID}
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).${DATE_TIME_PID}
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
LOCKD=${SYSD}/LOCK/$2
KEY=${3:-KEY}


########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
    [ -z ${STATUS} ] && STATUS='LOCK_ERROR'
    cat ${SYSD}/HTML/ERROR/SYSTEM_ERROR.HTML                        |
    sed -e "s/###ERROR1_LABEL###/データ操作ロック処理中にエラー/"   |
    sed -e "s/###ERROR2_LABEL###/処理ステータス:${STATUS}/"         |
    sed -e "s|###ERROR3_LABEL###|${LOCKD}|"                         |
    sed -e "s/###ERROR4_LABEL###/${KEY}/"                           |
    sed -e "s/###ERROR5_LABEL###//"                                 > $tmp-html
    echo ${STATUS}
    exit 0
}

########################################
#LOCK/配下に指定したカテゴリ名のディレクトリが無ければ作成
if [ -e ${LOCKD} ] ; then
    :
else
    mkdir ${LOCKD}
    chmod -R 775 ${LOCKD}
    chown -R root:apache ${LOCKD}
    ERROR_CHECK
fi

########################################
#指定カテゴリにロックファイルがなければロックファイルを作成し、
#ロックファイルがある場合、最長〇〇秒までウェイティングする
COUNT=1
while :
do
    if [ -e ${LOCKD}/*.${KEY}.lock ]; then
        sleep 1s
        STATUS='WAITING'
    else
        touch ${LOCKD}/${DATE_TIME_PID}.${KEY}.lock
        ERROR_CHECK
        STATUS='LOCKED'
        break
    fi
    COUNT=$(( COUNT + 1 ))
    if [ ${COUNT} -gt 20 ] ; then
        STATUS='WAITE_ERROR'
        break
    fi
done


########################################
#ロックできなかった場合,強引にエラーを起こす
[ ${STATUS} != 'LOCKED' ] && touch LLLLL/.lock 
ERROR_CHECK

########################################
#戻り値
echo ${DATE_TIME_PID}.${STATUS}.${KEY}

########################################
#正常終了
exit 0
