#!/bin/bash -vx
#

########################################
# OPERATION_LIST/LIST SHOW.CGI
#
#   $1:必須 $$
#
#	Written by hiramatsu


########################################
#基本設定
export LANG=ja_JP.utf8
echo $LANG
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> $SYSD/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
DATAD=${SYSD}/DATA/${CATEGORY}/LISTS

#######################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

########################################
#GETパラメーターを取得
#GETパラメーターの順番は、action,page,serach,category-nm,category-no が前提
[ -n "$(cat $tmp-get | grep 'page=')" ] && \
QRY_PAGE=$(cat $tmp-get | awk '{split($0,ary,"&"); print ary[2]}' | sed 's/page\=//') || \
QRY_PAGE=1
[ -n "$(cat $tmp-get | grep 'search=')" ] && \
SEARCH=$(cat $tmp-get | awk '{split($0,ary,"&"); print ary[3]}') || \
SEARCH='search=0'

########################################
#検索で来た場合
#GETパラメーターの順番は、action,page,serach,category-nm,category-no が前提
cat $tmp-get | grep 'search' > $tmp-search
if [ "${SEARCH}" = 'search=1' ] ; then
    #絞込のカテゴリを取得(urldecode)
    PAGE_CATEGORY_NM=$(cat $tmp-get | awk '{split($0,ary,"&"); print ary[4]}' | sed 's/category-nm\=//' | ruby -r uri -ne 'print URI.unescape $_')
    PAGE_CATEGORY_NO=$(cat $tmp-get | awk '{split($0,ary,"&"); print ary[5]}' | sed 's/category-no\=//')
fi

#######################################
#ページャーを設定
START_END=`${SYSD}/APPLI/${CATEGORY}/LISTS/CGI/PAGER $1 ${QRY_PAGE} ${SEARCH} ${PAGE_CATEGORY_NM} ${PAGE_CATEGORY_NO}`

#######################################
#表示するレコードの開始と終了
START=$(cat $tmp-rec-start)
END=$(cat $tmp-rec-end)

########################################
#作業カテゴリを取得
cat ${SYSD}/DATA/OPERATION_CATEGORY/LISTS/LV3/*[^_d]        |
LANG=C sort -nk1,1                                          > $tmp-category

########################################
#Page絞り込み用の作業カテゴリ
# 1;カテゴリ番号 2;カテゴリ名
mojihame -lRECORDS ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/CATEGORY_PAGE.HTML $tmp-category > $tmp-operation-category-page

########################################
#作業リスト用の作業カテゴリ
# 1;カテゴリ番号 2;カテゴリ名
mojihame -lRECORDS ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/CATEGORY_LIST.HTML $tmp-category > $tmp-operation-category-list

########################################
#作業新規登録用の作業カテゴリ
# 1;カテゴリ番号 2;カテゴリ名
mojihame -lRECORDS ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/CATEGORY_NEW.HTML $tmp-category > $tmp-operation-category-new

########################################
# 改行文字を「\\n」という3文字の文字列に置換
CATEGORY_PAGE=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-operation-category-page`
CATEGORY_LIST=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-operation-category-list`
CATEGORY_NEW=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-operation-category-new`

########################################
#作業リストを取得
[ -z "${PAGE_CATEGORY_NO}" ] && ${PAGE_CATEGORY_NO}=0 || :
if [ "${PAGE_CATEGORY_NO}" -gt 0 ] ; then
    #ページフィルターにALL以外(空欄を除く)が選択された場合
    cat ${DATAD}/LV3/*[^_d]                                 |
    awk -v cate=${PAGE_CATEGORY_NO} '$2==cate{print $0}'    |
    LANG=C sort -nk2 -nk1                                   |
    awk -v s=${START} -v e=${END} 'NR>=s&&NR<=e&&$9!=1'     |
    juni                                                    > $tmp-records
else
    cat ${DATAD}/LV3/*[^_d]                                 |
    LANG=C sort -nk2 -nk1                                   |
    awk -v s=${START} -v e=${END} 'NR>=s&&NR<=e&&$9!=1'     |
    juni                                                    > $tmp-records
fi
mojihame -lRECORDS ${SYSD}/APPLI/${CATEGORY}/${FUNC}/HTML/RECORDS.HTML $tmp-records > $tmp-table-records

########################################
#登録済レコードに作業カテゴリリストを嵌め込む
cat $tmp-table-records                                      |
sed -e "s|###CATEGORY###|${CATEGORY_LIST}|g"                > $tmp-table

########################################
# 改行文字を「\\n」という3文字の文字列に置換
TABLE_RECORDS=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-table`

########################################
#tableにrecordsを嵌め込む
cat ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/TABLE.HTML         |
sed -e "s|###TABLE_RECORDS###|${TABLE_RECORDS}|g"           |
sed -e "s|###CATEGORY###|${CATEGORY_NEW}|g"                 > $tmp-table-html

########################################
# 改行文字を「\\n」という3文字の文字列に置換
TABLE=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-table-html`

########################################
#tableをはめ込む、ページャーを差し込む
cat ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/SHOW.HTML          |
sed -e "s|###CATEGORY_NM_PAGE###|${PAGE_CATEGORY_NM}|g"     |
sed -e "s|###CATEGORY_NO_PAGE###|${PAGE_CATEGORY_NO}|g"     |
sed -e "s|###CATEGORY###|${CATEGORY_PAGE}|g"                |
sed -e "s|###PAGE###|${QRY_PAGE}|g"                         |
sed -e "s|###TABLE###|${TABLE}|g"                           |
sed -e "s|###INFO_MSG###||g"                                |
sed -e "s|###PAGER###|$(cat $tmp-pager-html)|g"             > $tmp-html

########################################
#page name
echo "Operation lists" > $tmp-pagename

########################################
echo "OK"
exit 0
