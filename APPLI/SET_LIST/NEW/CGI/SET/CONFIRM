#!/bin/bash -vx
#

########################################
#	SET_LIST NEW SET CONFIRM.CGI
#
#   Arg
#       $1:$$
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> $SYSD/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/usr/local/bin:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
SUBFUNC=`cat $tmp-subfunc`

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

########################################
#フォーム値の設定
nameread SET_CATEGORY_NO_HID_NEW  $tmp-post  | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-set-category-no
nameread SET_CATEGORY_NM_HID_NEW  $tmp-post  | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-set-category-nm
nameread SET_NM_NEW               $tmp-post  | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-set-nm
nameread SET_PRICE_NEW            $tmp-post  | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-set-price
nameread SET_REMARKS_NEW          $tmp-post  | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-set-remarks

########################################
#バリデーション(必須入力確認)
#入力ありの場合、空ファイルが出力され、なしの場合、そのフィールド名が記載される
cat $tmp-post | awk '$2=="_" && $1=="SET_CATEGORY_NO_HID_NEW"{print $1}'  > $tmp-need-VALID1
cat $tmp-post | awk '$2=="_" && $1=="SET_CATEGORY_NM_HID_NEW"{print $1}'  > $tmp-need-VALID2
cat $tmp-post | awk '$2=="_" && $1=="SET_NM_NEW"{print $1}'               > $tmp-need-VALID3
cat $tmp-post | awk '$2=="_" && $1=="SET_PRICE_NEW"{print $1}'            > $tmp-need-VALID4

########################################
#バリデーション(重複確認)
#ファイル名の先頭にセット番号
#カテゴリ番号、セット番号、セット名、セット価格、備考
NAME=$(cat $tmp-set-nm)
cat ${SYSD}/DATA/SET_LIST/LV3/*[^_d] | awk '$3=="${NAME}" {print}' > $tmp-duplicate-VALID1

########################################
#バリデーションエラー項目の確定
#SET_CATEGORY_NO_HID_NEW
#SET_CATEGORY_NM_HID_NEW
if [ -n "$(cat $tmp-need-VALID1)$(cat $tmp-need-VALID2)" ] ; then 
    echo 'show' > $tmp-valid-set-category-no-nm
else
    echo 'hidden' > $tmp-valid-set-category-no-nm
fi
#SET_NM_NEW
if [ -n "$(cat $tmp-need-VALID3)" ] ; then
    echo 'show' > $tmp-valid-set-nm
else
    echo 'hidden' > $tmp-valid-set-nm
fi
#SET_PRICE_NEW
if [ -n "$(cat $tmp-need-VALID4)" ] ; then
    echo 'show' > $tmp-valid-set-price
else
    echo 'hidden' > $tmp-valid-set-price
fi

#Name Duplicate
if [ -n "$(cat $tmp-duplicate-VALID1)" ] ; then
    echo 'show' > $tmp-valid-set-nm-duplicate
else
    echo 'hidden' > $tmp-valid-set-nm-duplicate
fi

########################################
#バリデーションエラーの数をカウント
echo $(cat $tmp-valid-set-*)  | 
sed -e 's/hidden//g'          | 
awk '{print length($1)}'      > $tmp-valid-result

########################################
#アクションの設定
[ $( cat $tmp-valid-result ) -gt 0 ] && VALID=NG || VALID=OK

########################################
#HTMLの設定
if [ ${VALID} = 'NG' ] ; then
    RESULT=`${SYSD}/APPLI/${CATEGORY}/${FUNC}/CGI/SET/INPUT $1`
    echo "NG"
else
    echo "OK"
fi

###############################################################################
#ending
exit 0
