#!/bin/bash -evx
#

########################################
#	SET_DETAIL/NEW COMPLETE.CGI
#
#   引数
#       $1:プロセスID
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
DATAD=${SYSD}/DATA/${CATEGORY}/LISTS

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

########################################
#セットカテゴリ更新中は、処理をさせない
#ls ${SYSD}/LOCK/SET_CATEGORY/* > $tmp-checker 2> /dev/null
#if [ -n cat $tmp-checker ] ; then
#    echo "333" > $tmp-ajax-html
#    exit 0
#fi

#######################################
#フォームの入力値を取得
SET_NO=$(nameread SET_NO   $tmp-post | awk '{gsub(/^\_$/,"",$1);print}')     #オペレーションNo
nameread DETAIL_NAME    $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-name-org      #詳細名称
nameread DETAIL_VALUE   $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value-org     #詳細値

#######################################
#「&」エスケープ
cat $tmp-name-org   | sed 's/\&/\\\\\\&/' > $tmp-name
cat $tmp-value-org  | sed 's/\&/\\\\\\&/' > $tmp-value

########################################
#バリデーションを設定

#DETAIL_NAME
cat $tmp-name   | awk '{print sprintf("DETAIL_NAME|ISNULL|%s",$1)}'   >> $tmp-validation  #必須入力
cat $tmp-name   | awk '{print sprintf("DETAIL_NAME|DUPLICATE|SET_DETAIL,LISTS,"",1,%s",$1)}'  >> $tmp-validation  #重複確認

#DETAIL_VALUE
cat $tmp-value  | awk '{print sprintf("DETAIL_VALUE|ISNULL|%s",$1)}'  >> $tmp-validation  #必須入力

########################################
#バリデーションを実行
result=`${SYSD}/CGI/VALID/VALIDATION $1`

########################################
#バリデーション結果
if [ -n "$(grep "|NG" $tmp-valid-report)" ] ; then
    #Validation NG
    echo 'VALID_NG@' $(cat $tmp-valid-report) > $tmp-ajax-html
    #echo 2222 > $tmp-ajax-html
    exit 0
fi

#########################################
##現在の最終詳細番号を調査、新規番号を設定
PK=$(ls ${DATAD}/LV2/${SET_NO}_*  | LANG=C sort -nk1 | tail -n1 | xargs -I{} basename {} | cut -d'_' -f2)
[ -z "${PK}" ] && PK=0 || :
PK=$(( PK + 1 ))

########################################
#日付を設定
CREATE_DATE=$(date +%Y%m%d%H%M%S)
UPDATE_DATE=$CREATE_DATE

########################################
#更新者の取得
CREATE_USER=$(cat ${SYSD}/SESSION/$(session_get 'sureshot_stuff_session_id'))
UPDATE_USER=${CREATE_USER}

########################################
#詳細リストディレクトリを作成する
result=`${SYSD}/CGI/DATA/DFS_NEW $$ ${SYSD}/DATA/SET_DETAIL/LISTS ${SYSD}/DATA/SET_DETAIL/LISTS`

########################################
#データ配置
#LV1
echo $(cat $tmp-name):$(cat $tmp-value) > ${DATAD}/LV1/${SET_NO}_${PK}_${CREATE_USER}_${CREATE_DATE}

#LV2
cp -fp ${DATAD}/LV1/${SET_NO}_${PK}_* ${DATAD}/LV2/

#LV3
rm -f ${DATAD}/LV3/${SET_NO}_*
for file in $(ls ${DATAD}/LV2/${SET_NO}_* | sort -t$'_' -nk1);
do
  PK=$(basename $file | cut -d'_' -f2)
  VALUE=$(cat $file   | awk 'BEGIN{FS=":"}{print $1,$2}')
  echo ${PK} ${VALUE} ${CREATE_DATE} ${UPDATE_DATE} ${CREATE_USER} ${UPDATE_USER} \
  >> ${DATAD}/LV3/${SET_NO}_details_${CREATE_DATE}
done

########################################
#詳細を取得
cat ${DATAD}/LV3/${SET_NO}_details_*  > $tmp-records
mojihame -lRECORDS ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/RECORDS.HTML $tmp-records > $tmp-table

########################################
# 改行文字を「\\n」という3文字の文字列に置換
TABLE_RECORDS=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-table`

########################################
#tableにrecordsを嵌め込む
cat ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/TABLE.HTML     |
sed -e "s|###TABLE_RECORDS###|${TABLE_RECORDS}|g"       > $tmp-ajax-html

########################################
#ending
echo "OK"
exit 0
