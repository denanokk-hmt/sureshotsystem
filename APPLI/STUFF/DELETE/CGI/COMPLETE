#!/bin/bash -evx
#

########################################
#	STUFF DELETE COMPLETE.CGI
#
#   引数
#       $1:プロセスID
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
STUFFD=${SYSD}/DATA/${CATEGORY}
USERSD=${STUFFD}/USERS
STUFF_SESS_ID='sureshot_stuff_session_id'

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

########################################
#フォーム値の設定
nameread STUFF_ID   $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-pk-1
nameread ENC_ID     $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-enc-id

########################################
#認証用ID,PWを取得
USER=$(cat ${SYSD}/SESSION/$(session_get 'sureshot_stuff_session_id'))

######################################
#スタッフ番号を復元
cat ${SYSD}/TMP/${USER}/STUFF/$(cat $tmp-enc-id) > $tmp-stuff-id
STUFF_ID=$(cat $tmp-pk-1)

########################################
#社員番号が一致しない場合、不正より処理を中断
if [ "${STUFF_ID}" != "$(cat $tmp-stuff-id)" ] ; then
    cat ${SYSD}/HTML/ERROR/SYSTEM_ERROR.HTML                        |
    sed -e "s/###ERROR1_LABEL###/不正削除によりエラー/"             |
    sed -e "s/###ERROR2_LABEL###/$(cat $tmp-stuff-id)/"             |
    sed -e "s|###ERROR3_LABEL###|照合エラー|"                       |
    sed -e "s/###ERROR4_LABEL###/管理者に報告してください。/"       |
    sed -e "s/###ERROR5_LABEL###//"                                 > $tmp-html
    echo "ERROR"
    exit 0
fi

########################################
#該当のSTUFFのデータ操作をロック
LOCK=`${SYSD}/CGI/LOCK/LOCK $1 'STUFF' ${STUFF_NUM}`
LOCK_STATUS=$(echo $LOCK | cut -d'.' -f4)
[ ${LOCK_STATUS} != 'LOCKED' ] && exit 0 || :

########################################
#作成日時、作成者、最終更新日時、更新者を取得
`${SYSD}/CGI/CREATE_LASTUPDATE $1 ${USERSD}/LV1 ${STUFF_ID}`
CREATE_DATE=$(cat $tmp-create-dt)
CREATE_USER=$(cat $tmp-create-user)
LASTUPDATE_DT=$(cat $tmp-lastupdate-dt)
LASTUPDATE_USER=$(cat $tmp-lastupdate-user)

########################################
#更新日時
UPDATE_DATE=$(date +%Y%m%d%H%M%S)

########################################
#データ配置
#LV1
cp -f ${USERSD}/LV1/${STUFF_ID}_1_*_${LASTUPDATE_DT} ${USERSD}/LV1/${STUFF_ID}_1_${USER}_${UPDATE_DATE}_d
cp -f ${USERSD}/LV1/${STUFF_ID}_2_*_${LASTUPDATE_DT} ${USERSD}/LV1/${STUFF_ID}_2_${USER}_${UPDATE_DATE}_d
cp -f ${USERSD}/LV1/${STUFF_ID}_3_*_${LASTUPDATE_DT} ${USERSD}/LV1/${STUFF_ID}_3_${USER}_${UPDATE_DATE}_d
cp -f ${USERSD}/LV1/${STUFF_ID}_4_*_${LASTUPDATE_DT} ${USERSD}/LV1/${STUFF_ID}_4_${USER}_${UPDATE_DATE}_d
cp -f ${USERSD}/LV1/${STUFF_ID}_5_*_${LASTUPDATE_DT} ${USERSD}/LV1/${STUFF_ID}_5_${USER}_${UPDATE_DATE}_d
cp -f ${USERSD}/LV1/${STUFF_ID}_6_*_${LASTUPDATE_DT} ${USERSD}/LV1/${STUFF_ID}_6_${USER}_${UPDATE_DATE}_d
cp -f ${USERSD}/LV1/${STUFF_ID}_7_*_${LASTUPDATE_DT} ${USERSD}/LV1/${STUFF_ID}_7_${USER}_${UPDATE_DATE}_d
cp -f ${USERSD}/LV1/${STUFF_ID}_8_*_${LASTUPDATE_DT} ${USERSD}/LV1/${STUFF_ID}_8_${USER}_${UPDATE_DATE}_d
cp -f ${USERSD}/LV1/${STUFF_ID}_9_*_${LASTUPDATE_DT} ${USERSD}/LV1/${STUFF_ID}_9_${USER}_${UPDATE_DATE}_d

#LV2
rm -f ${USERSD}/LV2/${STUFF_ID}_*
cp -fp ${USERSD}/LV1/${STUFF_ID}_*_${USER}_${UPDATE_DATE}_d ${USERSD}/LV2/

#LV3
rm -f ${USERSD}/LV3/${STUFF_ID}_*
for file in $(ls ${USERSD}/LV2/${STUFF_ID}_* | sort -t$'_' -nk1);
do
  VALUE=$(echo $VALUE `cat $file`)
done
echo ${VALUE} ${CREATE_DATE} ${UPDATE_DATE} ${CREATE_USER} ${USER} \
"/APP/STUFF/USERS?action=SHOW&id=${STUFF_ID}" \
"/APP/STUFF/EDIT?action=INPUT&id=${STUFF_ID}" \
"/APP/STUFF/DELETE?action=CONFIRM&id=${STUFF_ID}" \
> ${USERSD}/LV3/${STUFF_ID}_stuff_${UPDATE_DATE}_d

########################################
#STUFFのデータ操作ロックを解除
UNLOCK_STATUS=`${SYSD}/CGI/LOCK/UNLOCK $1 'STUFF' ${STUFF_NUM}`
[ ${UNLOCK_STATUS} != 'UNLOCK' ] && exit 0 || :

######################################
#暗号化の一時ファイルは削除
rm -rf ${SYSD}/TMP/${USER}/STUFF

########################################
#スタッフの最新データを取得
cat `ls -v ${USERSD}/LV2/${DEL_ID}*` > $tmp-lv2

########################################
#Emailを復号化
cat ${SYSD}/DATA/STUFF/ACCOUNTS/$(cat $tmp-lv2 | sed -n 4p) | openssl enc -aes-128-cbc -d -base64 -pass pass:$(cat ${SYSD}/CGI/BIN/key) > $tmp-email-decode

########################################
#管理者権限を取得
[ "$(cat $tmp-lv2 | sed -n 8p)" = "1" ] && ADMIN="管理者権限あり" || ADMIN='管理者権限なし'

########################################
#HTMLの設定
cat ${SYSD}/APPLI/${CATEGORY}/${FUNC}/HTML/COMPLETE.HTML        |
sed -e "s/###STUFF_ID_LABEL###/$(cat $tmp-lv2 | sed -n 1p)/g"   |
sed -e "s/###FAMILY_NAME_LABEL###/$(cat $tmp-lv2 | sed -n 2p)/" |
sed -e "s/###GIVEN_NAME_LABEL###/$(cat $tmp-lv2 | sed -n 3p)/"  |
sed -e "s/###EMAIL_LABEL###/$(cat $tmp-email-decode)/"          |
sed -e "s/###TEL1_LABEL###/$(cat $tmp-lv2 | sed -n 6p)/"        |
sed -e "s/###TEL2_LABEL###/$(cat $tmp-lv2 | sed -n 7p)/"        |
sed -e "s/###ADMIN_LABEL###/${ADMIN}/"                          > $tmp-html

#########################################
#page name
echo "Delete stuff complete" > $tmp-pagename

###############################################################################
#ending
echo "OK"
exit 0
