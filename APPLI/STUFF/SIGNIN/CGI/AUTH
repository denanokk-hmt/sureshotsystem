#!/bin/bash -vx
#

########################################
#	AUTH.CGI
#
#   引数
#       $1:プロセスID
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/usr/local/bin:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
USERSD=${SYSD}/DATA/STUFF/USERS

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

######################################
#Get Form Data
ID=$(nameread ID $tmp-post)
PW=$(nameread PASSWORD $tmp-post)
RETURN_URL=$(nameread RETURN_URL $tmp-post)

#######################################
#アカウントIDをハッシュ化
echo $(sha1 ${ID}) > $tmp-sha1-id

#######################################
#パスワードをハッシュ
echo $(sha1 ${PW}) > $tmp-sha1-pw

#######################################
#AUTH
cat ${USERSD}/LV3/*[^_d] | awk -v id=$(cat $tmp-sha1-id) -v pw=$(cat $tmp-sha1-pw) '$4==id&&$5==pw {print}' > $tmp-auth

########################################
#SET LOGIN SESSION
if [ -n "$(cat $tmp-auth)" ] ; then

    #ログインOKの場合

    #スタッフ番号を取得
    cat ${USERSD}/LV3/*[^_d]                              | 
    awk -v id=${ID} -v pw=${PW} '$4==id&&$5==pw {print}'  |
    cut -d' ' -f1                                         > $tmp-stuff-no
 
    #ログインセッション用クッキー設定文字列(ファイル内に社員IDを書き込む)
    STUFF_SESS_ID='sureshot_stuff_session_id'
    COOK=`${SYSD}/CGI/SESSION/SESSION_SET ${STUFF_SESS_ID} 15 $(cat $tmp-stuff-no)`
    echo $COOK > $tmp-cook-login

    #ログインアカウント用クッキー設定文字列(ファイル内にアカウントIDを書き込む)
    STUFF_SESS_AC='sureshot_stuff_session_ac'
    COOK=`${SYSD}/CGI/SESSION/SESSION_SET ${STUFF_SESS_AC} 15 ${ID}`
    echo $COOK > $tmp-cook-account

    #サイドメニューのサインイン/アウトの表示非表示
    echo "hidden" > $tmp-side-signin
    echo "show" > $tmp-side-signout
    
    #ログインしたSTUFFフォルダをTMPに作成
    mkdir ${SYSD}/TMP/$(cat $tmp-stuff-no)
fi

#######################################
#HTMLの設定
if [ -z "$(cat $tmp-auth)" ] ; then
    #ログインエラーの場合
    cat ${SYSD}/APPLI/${CATEGORY}/${FUNC}/HTML/INPUT.HTML               |
    sed -e "s/###INFO_LV###/danger/"                                    |
    sed -e "s/###AUTH_MSG###/Account ID or Password was incomplete./"   |
    sed -e "s/###ID_VALUE###/${ID}/"                                    |
    sed -e "s/###PASSWORD_VALUE###//"                                   |
    sed -e "s|###RETURN_URL###|${RETURN_URL}|"                          > $tmp-html
else
    if [ -z "${RETURN_URL}" ] ; then
        cat ${SYSD}/HTML/INDEX.HTML > $tmp-html
    else
        echo ${SYSD}/${RETURN_URL} > $tmp-html
    fi
fi

#######################################
#ページ名
if [ -z "$(cat $tmp-auth)" ] ; then
    echo "Stuff sign in" > $tmp-pagename
else
    echo "Top" > $tmp-pagename
fi

###############################################################################
#ending
echo "OK"
exit 0
