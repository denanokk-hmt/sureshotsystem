#!/bin/bash -evx
#

########################################
#	STUFF NEW COMPLETE.CGI
#
#   引数
#       $1:プロセスID
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
STUFFD=${SYSD}/DATA/${CATEGORY}
LOGIND=${STUFFD}/LOGIN
USERSD=${STUFFD}/USERS
STUFF_SESS_ID='sureshot_stuff_session_id'

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

########################################
#社員番号の次のロットを追加する
LATEST_NUM=$(ls ${SYSD}/DATA/NUMBERS/${CATEGORY}/ORIGIN | sort -nr | head -n 1)
START=$((LATEST_NUM + 1))
END=$((START + 3))
SEQ_STATUS=`${SYSD}/CGI/NUMBER_SEQ $1 ${CATEGORY} ${START} ${END} `
[[ ${SEQ_STATUS} != 'SUCCESS' ]] && exit 0

########################################
#新規の社員番号を確定する
STUFF_NUM=`${SYSD}/CGI/NUMBERS $1 'STUFF' `
[ ${STUFF_NUM} = 'ERROR' ] && exit 0 || :

#######################################
#Get Form Data
FAMILY_NAME=$(nameread FAMILY_NAME $tmp-post)
GIVEN_NAME=$(nameread GIVEN_NAME $tmp-post)
EMAIL=$(nameread EMAIL $tmp-post)
PASSWORD=$(nameread PASSWORD $tmp-post)
TEL1=$(nameread TEL1 $tmp-post)
TEL2=$(nameread TEL2 $tmp-post)
ADMIN_FLG=$(nameread ADMIN_VAL $tmp-post)
[ "${ADMIN_FLG}" = "1" ] && ADMIN="管理者権限あり" || ADMIN='管理者権限なし'
DEL_FLG=0

########################################
#Set DATE
CREATE_DATE=$(date +%Y%m%d%H%M%S)
UPDATE_DATE=$CREATE_DATE

########################################
#更新者の取得
CREATE_USER=$(cat ${SYSD}/SESSION/$(session_get 'sureshot_stuff_session_id'))
UPDATE_USER=${CREATE_USER}

########################################
#       ログインデータ　
########################################

########################################
#一時ファイルに書き込み
echo ${STUFF_NUM} ${EMAIL} ${PASSWORD} ${CREATE_DATE} ${UPDATE_DATE} ${CREATE_USER} ${UPDATE_USER} 0 > $tmp-login

########################################
#データ配置
#LV1
mv $tmp-login ${LOGIND}/LV1/${STUFF_NUM}_login_${CREATE_DATE}
#LV2
cat ${LOGIND}/LV1/${STUFF_NUM}_login_${CREATE_DATE} | awk '{$NF=""; print $0}' > ${LOGIND}/LV2/${STUFF_NUM}_login_${CREATE_DATE}
#LV3(LV2と同じ)
cp -p ${LOGIND}/LV2/${STUFF_NUM}_login_${CREATE_DATE} ${LOGIND}/LV3/${STUFF_NUM}_login_${CREATE_DATE}


########################################
#       スタッフデータ　
########################################

########################################
#一時ファイルに書き込み
#stuff_id	family_name	given_name	account_id	tel1	tel2	create_date	update_date	create_user	update_user	admin_flg	del_flg
echo ${STUFF_NUM} ${FAMILY_NAME} ${GIVEN_NAME} ${EMAIL} ${TEL1} ${TEL2} ${CREATE_DATE} ${UPDATE_DATE} ${CREATE_USER} ${UPDATE_USER} ${ADMIN_FLG} ${DEL_FLG} > $tmp-stuff

########################################
#データ配置
#LV1
#stuff_id	family_name	given_name	account_id	tel1	tel2	create_date	update_date	create_user	update_user	admin_flg	del_flg
mv $tmp-stuff ${USERSD}/LV1/${STUFF_NUM}_stuff_${CREATE_DATE}
#LV2
#stuff_id	family_name	given_name	account_id	tel1	tel2	create_date	update_date	create_user	update_user	admin_flg
#削除フラグはもたない-->dファイルにする
cat ${USERSD}/LV1/${STUFF_NUM}_stuff_${CREATE_DATE} | awk '{$NF=""; print $0}' > ${USERSD}/LV2/${STUFF_NUM}_stuff_${CREATE_DATE}
#LV3
#stuff_id	family_name	given_name	account_id	tel1	tel2	create_date	update_date	create_user	update_user	admin_flg	show_each_url	edit_each_url	delete_each_url
cat ${USERSD}/LV2/${STUFF_NUM}_stuff_${CREATE_DATE} |
awk '{print sprintf("%s\
/APP/STUFF/USERS?action=SHOW&id=%d \
/APP/STUFF/EDIT?action=INPUT&id=%d \
/APP/STUFF/DELETE?action=CONFIRM&id=%d"\
,$0,$1,$1,$1)}'  >   ${USERSD}/LV3/${STUFF_NUM}_stuff_${CREATE_DATE}

########################################
#HTMLの設定
ACTION=`cat $tmp-action`
cat ${SYSD}/APPLI/${CATEGORY}/${FUNC}/HTML/${ACTION}.HTML   |
sed -e "s/###FAMILY_NAME_LABEL###/${FAMILY_NAME}/"          |
sed -e "s/###GIVEN_NAME_LABEL###/${GIVEN_NAME}/"            |
sed -e "s/###EMAIL_LABEL###/${EMAIL}/"                      |
sed -e "s/###TEL1_LABEL###/${TEL1}/"                        |
sed -e "s/###TEL2_LABEL###/${TEL2}/"                        |
sed -e "s/###ADMIN_LABEL###/${ADMIN}/"                      > $tmp-html

#########################################
#pege name
echo "New stuff complete" > $tmp-pagename

###############################################################################
#ending
echo "OK"
exit 0
