#!/bin/bash -evx
#

########################################
#	PARTS_LIST/NEW COMPLETE.CGI
#
#   引数
#       $1:プロセスID
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
DATAD=${SYSD}/DATA/${CATEGORY}/LISTS

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

########################################
#パーツカテゴリ更新中は、処理をさせない
#ls ${SYSD}/LOCK/PARTS_CATEGORY/* > $tmp-checker 2> /dev/null
#if [ -n cat $tmp-checker ] ; then
#    echo "333" > $tmp-ajax-html
#    exit 0
#fi

########################################
#パーツ番号の次のロットを追加する
LATEST_NUM=$(ls ${SYSD}/DATA/NUMBERS/${CATEGORY}/ORIGIN | sort -nr | head -n 1)
START=$((LATEST_NUM + 1))
END=$((START + 1))
SEQ_STATUS=`${SYSD}/CGI/NUMBER_SEQ $1 ${CATEGORY} ${START} ${END} `
[[ ${SEQ_STATUS} != 'SUCCESS' ]] && exit 0

########################################
#新規パーツ番号を確定する
NEW_NUM=`${SYSD}/CGI/NUMBERS $1 'PARTS_LIST' `
[ ${NEW_NUM} = 'ERROR' ] && exit 0 || :

#######################################
#フォームの入力値を取得
cat $tmp-post
QRY_PAGE=$(nameread PAGE $tmp-post)
SEARCH=$(nameread PAGE $tmp-post)
PAGE_CATEGORY_NM=$(nameread CATEGORY_NM $tmp-post)
PAGE_CATEGORY_NO=$(nameread CATEGORY_NO $tmp-post)
PARTS_NM_EN=$(nameread NEW_PARTS_NAME $tmp-post)             #パーツ名(EN)
PARTS_PRICE=$(nameread NEW_PARTS_PRICE $tmp-post)            #プライス

#新規追加
PARTS_CATEGORY_NO=$(nameread CATEGORY_NO_HID_NEW $tmp-post) #パーツカテゴリ番号
PARTS_NM_JP=$(nameread NEW_PARTS_NAME_JP $tmp-post)         #パーツ名(JP)
PARTS_REMARKS=$(nameread NEW_PARTS_REMARKS $tmp-post)       #備考

#######################################
#&エスケープ
PARTS_NM_EN=$(echo ${PARTS_NM_EN} | sed 's/\&/\\\\\\&/')
PARTS_NM_JP=$(echo ${PARTS_NM_JP} | sed 's/\&/\\\\\\&/')
PARTS_REMARKS=$(echo ${PARTS_REMARKS} | sed 's/\&/\\\\\\&/')


########################################
#重複確認
cat ${DATAD}/${PARTS_CATEGORY_NO}/LV3/* | awk -v cat=${PARTS_CATEGORY_NO} -v nm=${PARTS_NM_EN} '$2==cat&&$4==nm{print $1}' > $tmp-valid1
if [ -n "$(cat $tmp-valid1)" ] ; then
    echo 2222 > $tmp-ajax-html
    exit 0
fi

########################################
#日付を設定
CREATE_DATE=$(date +%Y%m%d%H%M%S)
UPDATE_DATE=$CREATE_DATE

########################################
#更新者の取得
CREATE_USER=$(cat ${SYSD}/SESSION/$(session_get 'sureshot_stuff_session_id'))
UPDATE_USER=${CREATE_USER}

########################################
#入力値を一時ファイル化
#parts_id	parts_nm_en	parts_nm_jp	price	remarks	create_date	update_date	create_user	update_user	del_flg
echo ${NEW_NUM} ${PARTS_NM_EN} ${PARTS_NM_JP} ${PARTS_PRICE} ${PARTS_REMARKS} ${CREATE_DATE} ${UPDATE_DATE} ${CREATE_USER} ${UPDATE_USER} 0 > $tmp-parts

########################################
#データ格納
#所属するカテゴリNoの下に配置
#LV1
#原始データとして追加のみを行う
mv $tmp-parts ${DATAD}/${PARTS_CATEGORY_NO}/LV1/${NEW_NUM}_parts_${CREATE_DATE}

#LV2
#削除フラグは除外-->dファイルとして扱う
cat ${DATAD}/${PARTS_CATEGORY_NO}/LV1/${NEW_NUM}_parts_${CREATE_DATE}  | awk '{$NF=""; print $0}'> ${DATAD}/${PARTS_CATEGORY_NO}/LV2/${NEW_NUM}_parts_${CREATE_DATE}

#LV3
#LV2のコピー
cp -p ${DATAD}/${PARTS_CATEGORY_NO}/LV2/${NEW_NUM}_parts_${CREATE_DATE} ${DATAD}/${PARTS_CATEGORY_NO}/LV3/${NEW_NUM}_parts_${CREATE_DATE}

########################################
#正規データ配置
#なにがしかのカテゴリNoの下にあるLV3データをかき集め、ファイルパスからカテゴリNoを、ファイルデータからパーツ番号を
#紐付けたマップを作成
ls ${SYSD}/DATA/PARTS_LIST/LISTS/*/LV3/*[^_d] | awk '{split($0,ary,"/"); print ary[7], ary[9]}' | cut -d'_' -f1 | LANG=C sort -k1 > $tmp-cate-list-map

#パーツカテゴリ一覧
cat ${SYSD}/DATA/PARTS_CATEGORY/LISTS/LV3/*[^_d] | awk '{print $1,$2}' | LANG=C sort -k1 > $tmp-cate-all

#パーツ一覧
cat ${SYSD}/DATA/PARTS_LIST/LISTS/*/LV3/*[^_d] | LANG=C sort -k1 > $tmp-parts-all

#JOIN
#マップとカテゴリ
LANG=C join -1 1 -2 1 $tmp-cate-list-map $tmp-cate-all | LANG=C sort -k2 > $tmp-parts-category

#カテゴリとパーツ一覧
LANG=C join -1 2 -2 1 $tmp-parts-category $tmp-parts-all > $tmp-parts-list

#カテゴリ情報とマッピングしたパーツ一覧をLISTS/LV3へ配置
rm -f ${SYSD}/DATA/PARTS_LIST/LISTS/LV3/parts_*
mv $tmp-parts-list ${SYSD}/DATA/PARTS_LIST/LISTS/LV3/parts_${CREATE_DATE}

#######################################
#ページャーを設定
START_END=`${SYSD}/APPLI/${CATEGORY}/LISTS/CGI/PAGER $1 ${QRY_PAGE} ${SEARCH} ${PAGE_CATEGORY_NM} ${PAGE_CATEGORY_NO}`

#######################################
#表示するレコードの開始と終了
START=$(cat $tmp-rec-start)
END=$(cat $tmp-rec-end)

########################################
#パーツカテゴリを取得
cat ${SYSD}/DATA/PARTS_CATEGORY/LISTS/LV3/*[^_d]    |
LANG=C sort -nk1,1                                  > $tmp-category

########################################
#Page絞り込み用のパーツカテゴリ
# 1;カテゴリ番号 2;カテゴリ名
mojihame -lRECORDS ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/CATEGORY_PAGE.HTML $tmp-category > $tmp-parts-category-page

########################################
#登録済パーツ用のパーツカテゴリ
# 1;カテゴリ番号 2;カテゴリ名
mojihame -lRECORDS ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/CATEGORY_LIST.HTML $tmp-category > $tmp-parts-category-list

########################################
#新規登録パーツ用のパーツカテゴリ
# 1;カテゴリ番号 2;カテゴリ名
mojihame -lRECORDS ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/CATEGORY_NEW.HTML $tmp-category > $tmp-parts-category-new

########################################
# 改行文字を「\\n」という3文字の文字列に置換
CATEGORY_PAGE=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-parts-category-page`
CATEGORY_LIST=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-parts-category-list`
CATEGORY_NEW=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-parts-category-new`

########################################
#パーツリストを取得
[ -z "${PAGE_CATEGORY_NO}" ] && ${PAGE_CATEGORY_NO}=0 || :
if [ "${PAGE_CATEGORY_NO}" -gt 0 ] ; then
    cat ${DATAD}/LV3/*[^_d]                                 |
    LANG=C sort -nk2 -nk1                                   |
    awk -v s=${START} -v e=${END} 'NR>=s&&NR<=e&&$9!=1'     |
    juni                                                    > $tmp-records
else
    cat ${DATAD}/LV3/*[^_d]                                 |
    LANG=C sort -nk2 -nk1                                   |
    awk -v s=${START} -v e=${END} 'NR>=s&&NR<=e&&$9!=1'     |
    juni                                                    > $tmp-records
fi
#
mojihame -lRECORDS ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/RECORDS.HTML $tmp-records > $tmp-table-records

########################################
#登録済レコードにパーツカテゴリリストを嵌め込む
cat $tmp-table-records                                      |
sed -e "s|###CATEGORY###|${CATEGORY_LIST}|g"                > $tmp-table

########################################
# 改行文字を「\\n」という3文字の文字列に置換
TABLE_RECORDS=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-table`

########################################
#tableにrecordsを嵌め込む
cat ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/TABLE.HTML         |
sed -e "s|###CATEGORY###|${CATEGORY_NEW}|g"                 |
sed -e "s|###TABLE_RECORDS###|${TABLE_RECORDS}|g"           > $tmp-ajax-html

########################################
#ending
echo "OK"
exit 0
