#!/bin/bash -evx
#

########################################
#	PARTS_LIST/EDIT COMPLETE.CGI
#
#   引数
#       $1:プロセスID
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
DATAD=${SYSD}/DATA/${CATEGORY}/LISTS

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

########################################
#パーツカテゴリ更新中は、処理をさせない
#ls ${SYSD}/LOCK/PARTS_CATEGORY/* > $tmp-checker
#if [ -n cat $tmp-checker ] ; then
#    echo "333" > $tmp-ajax-html
#    exit 0
#fi

#######################################
#フォームの入力値を取得
PAGE_CATEGORY_NM=$(nameread PAGE_CATEGORY_NM $tmp-post)             #フィルター:カテゴリ名
PAGE_CATEGORY_NO=$(nameread CATEGORY_NO  $tmp-post)                 #フィルター:カテゴリNO
NUM=$(nameread EDIT_PARTS_NO $tmp-post)                             #パーツ番号
VALUE1=$(nameread EDIT_PARTS_CATEGORY_NAME $tmp-post)               #パーツカテゴリ名
VALUE2=$(nameread EDIT_PARTS_NAME $tmp-post)                        #パーツ名(EN)
VALUE3=$(nameread EDIT_PARTS_PRICE $tmp-post)                       # プライス
VALUE4=$(nameread EDIT_PARTS_CATEGORY_NO $tmp-post)                 #パーツカテゴリ番号
VALUE5=$(nameread EDIT_PARTS_NAME_JP $tmp-post)                     #パーツ名(JP)
VALUE6=$(nameread EDIT_PARTS_REMARKS $tmp-post)                     #備考
VALUE7=$(nameread EDIT_PARTS_CATEGORY_NX $tmp-post)                 #パーツカテゴリ番号(変更前)

########################################
#重複確認
#cat ${DATAD}/${VALUE4}/LV3/* | awk -v nm=${VALUE2} '$4==nm{print $1}' > $tmp-valid1
#if [ -n "$(cat $tmp-valid1)" ] ; then
#    echo 2222 > $tmp-ajax-html
#    exit 0
#fi

########################################
#既存データから作成日時取得、現在日時を更新日時とする
ls ${DATAD}/${VALUE7}/LV1/${NUM}_parts_* | sort -nk1,1 | head -n 1 | cut -d'_' -f4 > $tmp-create
CREATE_DATE=$(cat $tmp-create)
UPDATE_DATE=$(date +%Y%m%d%H%M%S)

########################################
#該当のデータ操作をロック
LOCK=`${SYSD}/CGI/LOCK/LOCK $1 'PARTS_LIST' ${NUM}`
LOCK_STATUS=$(echo $LOCK | cut -d'.' -f4)
[ ${LOCK_STATUS} != 'LOCKED' ] && exit 0 || :

########################################
#入力値を一時ファイル化
#1.パーツ番号 2.パーツカテゴリ番号 3.パーツカテゴリ名 4.パーツ名(EN) 5.パーツ名(JP) 6.価格 7.備考 8.作成日時 9.更新日時 10.削除フラグ
echo ${NUM} ${VALUE4} ${VALUE1} ${VALUE2} ${VALUE5} ${VALUE3} ${VALUE6} ${CREATE_DATE} ${UPDATE_DATE} 0 > $tmp-parts

########################################
#データ格納
#LV1:原始データとして、ファイル追加のみを行う
mv $tmp-parts ${DATAD}/${VALUE4}/LV1/${NUM}_parts_${UPDATE_DATE}

#カテゴリを変更した場合
if [ "${VALUE4}" != "${VALUE7}" ]; then
    #旧カテゴリにあるLV1のパーツを論理削除
    ls ${DATAD}/${VALUE7}/LV1/${NUM}_parts_* | sort -nk1 | tail -n 1 > $tmp-delete-lv1
    cp $(cat $tmp-delete-lv1) ${DATAD}/${VALUE7}/LV1/${NUM}_parts_${UPDATE_DATE}_d
    #旧カテゴリにあるLV2、LV3のパーツを論理削除ファイルと入れ替える
    rm -f ${DATAD}/${VALUE7}/LV2/${NUM}_parts_*
    cp ${DATAD}/${VALUE7}/LV1/${NUM}_parts_${UPDATE_DATE}_d ${DATAD}/${VALUE7}/LV2/   
    rm -f ${DATAD}/${VALUE7}/LV3/${NUM}_parts_*
    cp ${DATAD}/${VALUE7}/LV2/${NUM}_parts_* ${DATAD}/${VALUE7}/LV3/   
fi

#LV3:LV2を更新ファイルと入れ替え
rm -f ${DATAD}/${VALUE4}/LV2/${NUM}_parts_*
cp -fp ${DATAD}/${VALUE4}/LV1/${NUM}_parts_${UPDATE_DATE} ${DATAD}/${VALUE4}/LV2/
rm -f ${DATAD}/${VALUE4}/LV3/${NUM}_parts_*
cp -fp ${DATAD}/${VALUE4}/LV2/${NUM}_parts_${UPDATE_DATE} ${DATAD}/${VALUE4}/LV3/

########################################
#データ操作ロックを解除
UNLOCK_STATUS=`${SYSD}/CGI/LOCK/UNLOCK $1 'PARTS_LIST' ${NUM}`
[ ${UNLOCK_STATUS} != 'UNLOCK'] && exit 0 || :

########################################
#Ajax return
echo "111"> $tmp-ajax-html

########################################
#ending
echo "OK"
exit 0
