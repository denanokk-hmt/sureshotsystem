#!/bin/bash -evx
#

########################################
# SET_CATEGORY EDIT COMPLETE.CGI
#
#   引数
#       $1:プロセスID
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
DATAD=${SYSD}/DATA/${CATEGORY}/LISTS

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

#######################################
#フォームの入力値を取得
nameread SET_CATEGORY_ID    $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-pk-1
NUM=$(cat $tmp-pk-1)
nameread SET_CATEGORY_NM_EN $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-pk-2
nameread SET_CATEGORY_NM_JP $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-pk-3

########################################
#バリデーションを設定

#SET_CATEGORY_NM_EN
cat $tmp-pk-2 | awk '{print sprintf("SET_CATEGORY_NM_EN|ISNULL|%s",$1)}'                                >> $tmp-validation  #必須入力
cat $tmp-pk-2 | awk '{print sprintf("SET_CATEGORY_NM_EN|LENGTH|%s,3,0",$1)}'                            >> $tmp-validation  #3文字以上
cat $tmp-pk-2 | awk '{print sprintf("SET_CATEGORY_NM_EN|ISEN_ISJP|EN,%s",$1)}'                          >> $tmp-validation  #英語のみ
cat $tmp-pk-2 | awk -v gk=${NUM} '{print sprintf("SET_CATEGORY_NM_EN|DUPLICATE|SET_CATEGORY,LISTS,%s,2,%s",gk,$1)}'  >> $tmp-validation  #重複確認

#SET_CATEGORY_NM_JP
cat $tmp-pk-3 | awk '{print sprintf("SET_CATEGORY_NM_JP|ISNULL|%s",$1)}'                                >> $tmp-validation  #必須入力
cat $tmp-pk-3 | awk '{print sprintf("SET_CATEGORY_NM_JP|LENGTH|%s,3,0",$1)}'                            >> $tmp-validation  #3文字以上
cat $tmp-pk-3 | awk '{print sprintf("SET_CATEGORY_NM_JP|ISEN_ISJP|JP,%s",$1)}'                          >> $tmp-validation  #日本語
cat $tmp-pk-3 | awk -v gk=${NUM} '{print sprintf("SET_CATEGORY_NM_JP|DUPLICATE|SET_CATEGORY,LISTS,%s,3,%s",gk,$1)}'  >> $tmp-validation  #重複確認

########################################
#バリデーションを実行
result=`${SYSD}/CGI/VALID/VALIDATION $1`

########################################
#バリデーション結果
if [ -n "$(grep "|NG" $tmp-valid-report)" ] ; then
    #Validation NG
    echo 'VALID_NG@' $(cat $tmp-valid-report) > $tmp-ajax-html
    #echo 2222 > $tmp-ajax-html
    exit 0
fi

########################################
#作成日時、作成者、最終更新日時、更新者を取得
result=`${SYSD}/CGI/DFS_INFO/CREATE_LASTUPDATE $1 ${DATAD}/LV1 ${NUM}`
CREATE_DATE=$(cat $tmp-create-dt)
CREATE_USER=$(cat $tmp-create-user)
LASTUPDATE_DT=$(cat $tmp-lastupdate-dt)
LASTUPDATE_USER=$(cat $tmp-lastupdate-user)

########################################
#更新日時を設定
UPDATE_DATE=$(date +%Y%m%d%H%M%S)

########################################
#更新者の取得
UPDATE_USER=$(cat ${SYSD}/SESSION/$(session_get 'sureshot_stuff_session_id'))

########################################
#　　作業カテゴリのデータ操作
########################################

########################################
#該当のデータ操作をロック
LOCK=`${SYSD}/CGI/LOCK/LOCK $1 'SET_CATEGORY' ${NUM}`
LOCK_STATUS=$(echo $LOCK | cut -d'.' -f4)
[ ${LOCK_STATUS} != 'LOCKED' ] && exit 0 || :

########################################
#データ配置
#LV1
cat $tmp-pk-1 > ${DATAD}/LV1/${NUM}_1_${UPDATE_USER}_${UPDATE_DATE}
cat $tmp-pk-2 > ${DATAD}/LV1/${NUM}_2_${UPDATE_USER}_${UPDATE_DATE}
cat $tmp-pk-3 > ${DATAD}/LV1/${NUM}_3_${UPDATE_USER}_${UPDATE_DATE}

#LV2
rm -f ${DATAD}/LV2/${NUM}_*
cp -fp ${DATAD}/LV1/${NUM}_*_${UPDATE_DATE} ${DATAD}/LV2/

#LV3
rm -f ${DATAD}/LV3/${NUM}_*
for file in $(ls ${DATAD}/LV2/${NUM}_* | sort -t$'_' -nk1);
do
  VALUE=$(echo $VALUE `cat $file`)
done
echo ${VALUE} ${CREATE_DATE} ${UPDATE_DATE} ${CREATE_USER} ${UPDATE_USER} \
> ${DATAD}/LV3/${NUM}_set-category_${UPDATE_DATE}

########################################
#データ操作ロックを解除
UNLOCK_STATUS=`${SYSD}/CGI/LOCK/UNLOCK $1 'SET_CATEGORY' ${NUM}`
[ ${UNLOCK_STATUS} != 'UNLOCK' ] && exit 0 || :

########################################
#LV3一覧3データ配置
#なにがしかのカテゴリNoの下にあるLV3データをかき集め、
#ファイルパスからカテゴリNoを、
#ファイルデータからセット番号を

#紐付けたマップを作成
ls ${SYSD}/DATA/SET_LIST/LISTS/*/LV3/*[^_d] | awk '{split($0,ary,"/"); print ary[7], ary[9]}' | cut -d'_' -f1 | LANG=C sort -k1 > $tmp-cate-list-map

#セットカテゴリ一覧
cat ${SYSD}/DATA/SET_CATEGORY/LISTS/LV3/*[^_d] | awk '{print $1,$2}' | LANG=C sort -k1 > $tmp-cate-all

#セット一覧
cat ${SYSD}/DATA/SET_LIST/LISTS/*/LV3/*[^_d] | LANG=C sort -k1 > $tmp-set-all

#JOIN
#マップとカテゴリ
LANG=C join -1 1 -2 1 $tmp-cate-list-map $tmp-cate-all | LANG=C sort -k2 > $tmp-set-category

#カテゴリとセット一覧
LANG=C join -1 2 -2 1 $tmp-set-category $tmp-set-all > $tmp-set

#カテゴリ情報とマッピングしたセット一覧をLISTS/LV3へ配置
rm -f ${SYSD}/DATA/SET_LIST/LISTS/LV3/set_*
mv $tmp-set ${SYSD}/DATA/SET_LIST/LISTS/LV3/set_${UPDATE_DATE}

########################################
#
echo "111"> $tmp-ajax-html

########################################
#ending
echo "OK"
exit 0
