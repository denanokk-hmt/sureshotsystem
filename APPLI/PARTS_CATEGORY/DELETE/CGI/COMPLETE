#!/bin/bash -evx
#

########################################
#	PARTS_CATEGORY DELETE COMPLETE.CGI
#
#   引数
#       $1:プロセスID
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
DATAD=${SYSD}/DATA/${CATEGORY}/LISTS

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}
#
########################################
#フォームの入力値を取得
NUM=$(nameread PARTS_CATEGORY_ID $tmp-post)
NAME=$(nameread PARTS_CATEGORY_NAME $tmp-post)
PARTS_CATEGORY_NM_EN=$(nameread PARTS_CATEGORY_NM_EN $tmp-post)
PARTS_CATEGORY_NM_JP=$(nameread PARTS_CATEGORY_NM_JP $tmp-post)
#
########################################
#既存データから作成日時取得、現在日時を更新日時とする
ls ${DATAD}/LV1/${NUM}_parts_category_* | sort -nk1,1 | tail -n 1 | cut -d'/' -f8 | cut -d'_' -f4 > $tmp-create
CREATE_DATE=$(cat $tmp-create)
UPDATE_DATE=$(date +%Y%m%d%H%M%S)

########################################
#更新者の取得
CREATE_USER=$(cat ${DATAD}/LV3/${NUM}* | awk '{print $5}')
UPDATE_USER=$(cat ${SYSD}/SESSION/$(session_get 'sureshot_stuff_session_id'))

########################################
#　　パーツカテゴリのデータ操作
########################################

########################################
#該当のデータ操作をロック
LOCK=`${SYSD}/CGI/LOCK/LOCK $1 'PARTS_CATEGORY' ${NUM}`
LOCK_STATUS=$(echo $LOCK | cut -d'.' -f4)
[ ${LOCK_STATUS} != 'LOCKED' ] && exit 0 || :

########################################
#入力値を一時ファイル化
#parts_category_id	parts_category_nm_en  parts_category_nm_jp	create_date	update_date	create_user	update_user	del_flg
echo ${NUM} ${PARTS_CATEGORY_NM_EN} ${PARTS_CATEGORY_NM_JP} ${CREATE_DATE} ${UPDATE_DATE} ${CREATE_USER} ${UPDATE_USER} 1 > $tmp-parts-category

########################################
#データ格納
#LV1:原始データとして、ファイル追加のみを行う
#削除データなのでファイル名の末尾に_dを付ける
mv $tmp-parts-category ${DATAD}/LV1/${NUM}_parts_category_${UPDATE_DATE}_d

#LV2
#ファイル名の末尾に_dを付ける
mv $(ls ${DATAD}/LV2/${NUM}_*) $(ls ${DATAD}/LV2/${NUM}_*)_d

#LV3
#ファイル名の末尾に_dを付ける
mv $(ls ${DATAD}/LV3/${NUM}_*) $(ls ${DATAD}/LV3/${NUM}_*)_d

########################################
#データ操作ロックを解除
UNLOCK_STATUS=`${SYSD}/CGI/LOCK/UNLOCK $1 'PARTS_CATEGORY' ${NUM}`
[ ${UNLOCK_STATUS} != 'UNLOCK'] && exit 0 || :

########################################
#   パーツのデータ操作
#   削除する作業カテゴリに属している作業をすべて999に移動する操作
########################################

#削除するカテゴリーで登録されている作業に対して、
#未登録カテゴリーが存在していなければ作成(0)
# 0ディレクトリに移動

#パーツリストDir
PARTSD=${SYSD}/DATA/PARTS_LIST/LISTS

    #############################
#0未登録カテゴリを作成
if [ -e "${DATAD}/LV1/0_*" ]; then
    :
else
    #LV1
    echo 0 '未登録' 'Unregistered' ${UPDATE_DATE} ${UPDATE_DATE} ${UPDATE_USER} ${UPDATE_USER} 0 > \
    ${DATAD}/LV1/0_parts_category_${UPDATE_DATE}
    #LV2
    cat ${DATAD}/LV1/0_parts_category_${UPDATE_DATE} | awk '{$NF=""; print $0}' > \
    ${DATAD}/LV2/0_parts_category_${UPDATE_DATE}
    #LV3
    cp -p ${DATAD}/LV2/0_parts_category_${UPDATE_DATE} ${DATAD}/LV3/0_parts_category_${UPDATE_DATE}
fi

############################
#PARTS_LISTにカテゴリ0ディレクトリを作成
if [ -e "${PARTSD}/0" ]; then
    :
else
    result=`${SYSD}/CGI/DATA/DFS_NEW $$ ${PARTSD}/0 ${PARTSD}/0`
fi

#削除されるカテゴリのディレクトリから、身寄りが無くなったので、0ディレクトリにパーツリストをすべて移動
for file in `find ${PARTSD}/${NUM}/LV3/*[^_d] -maxdepth 1 -type f`; do

    #パーツ番号取得
    PARTS_NO=$(echo $file | awk 'BEGIN{FS="/"}{print $NF}' | cut -d'_' -f1) 
    #ARR+=($num)

    #該当のデータ操作をロック
    LOCK=`${SYSD}/CGI/LOCK/LOCK $1 'PARTS_LIST' ${num}`
    LOCK_STATUS=$(echo $LOCK | cut -d'.' -f4)
    [ ${LOCK_STATUS} != 'LOCKED' ] && exit 0 || :
    
    #LV1
    mv ${PARTSD}/${NUM}/LV1/${PARTS_NO}_parts_* ${PARTSD}/0/LV1/
    #LV2
    mv ${PARTSD}/${NUM}/LV2/${PARTS_NO}_parts_* ${PARTSD}/0/LV2/
    #LV3
    mv ${PARTSD}/${NUM}/LV3/${PARTS_NO}_parts_* ${PARTSD}/0/LV3/

    #データ操作ロックを解除
    UNLOCK_STATUS=`${SYSD}/CGI/LOCK/UNLOCK $1 'PARTS_LIST' ${num}`
    [ ${UNLOCK_STATUS} != 'UNLOCK'] && exit 0 || :
done

# 2.ディレクトリ名の末尾に_dをつける
mv ${PARTSD}/${NUM} ${PARTSD}/${NUM}_${UPDATE_DATE}_d

########################################
#LV3一覧3データ配置
#なにがしかのカテゴリNoの下にあるLV3データをかき集め、
#ファイルパスからカテゴリNoを
#ファイルデータからパーツ番号を

#紐付けたマップを作成
ls ${SYSD}/DATA/PARTS_LIST/LISTS/*/LV3/*[^_d] | awk '{split($0,ary,"/"); print ary[7], ary[9]}' | cut -d'_' -f1 | LANG=C sort -k1 > $tmp-cate-list-map

#パーツカテゴリ一覧
cat ${SYSD}/DATA/PARTS_CATEGORY/LISTS/LV3/*[^_d] | awk '{print $1,$2}' | LANG=C sort -k1 > $tmp-cate-all

#パーツ一覧
cat ${SYSD}/DATA/PARTS_LIST/LISTS/*/LV3/*[^_d] | LANG=C sort -k1 > $tmp-parts-all

#JOIN
#マップとカテゴリ
LANG=C join -1 1 -2 1 $tmp-cate-list-map $tmp-cate-all | LANG=C sort -k2 > $tmp-parts-category

#カテゴリとパーツ一覧
LANG=C join -1 2 -2 1 $tmp-parts-category $tmp-parts-all > $tmp-parts-list

#カテゴリ情報とマッピングしたパーツ一覧をLISTS/LV3へ配置
rm -f ${SYSD}/DATA/PARTS_LIST/LISTS/LV3/parts_*
mv $tmp-parts-list ${SYSD}/DATA/PARTS_LIST/LISTS/LV3/parts_${CREATE_DATE}

########################################
#
echo "111" > $tmp-ajax-html

########################################
#ending
echo "OK"
exit 0
