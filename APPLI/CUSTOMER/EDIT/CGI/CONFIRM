#!/bin/bash -vx
#

########################################
#	CUSTOMER EDIT CONFIRM.CGI
#
#   引数
#       $1:必須 $$
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=/home/sureshotsystem
#exec 2> $SYSD/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
PATH=/home/:/home/UTL:/usr/local/bin:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

########################################
#Get STUFF ID
nameread CUSTOMER_ID $tmp-post              | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-customer
CUSTOMER_ID=$(cat $tmp-customer)

########################################
#フォーム値の設定
nameread FIRST_NAME $tmp-post               | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value1
nameread GIVEN_NAME $tmp-post               | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value2
nameread EMAIL $tmp-post                    | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value3
nameread PASSWORD $tmp-post                 | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value4
nameread PASSWORD_CONFIRMATION $tmp-post    | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value5
nameread PHONE $tmp-post                    | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value6

########################################
#バリデーション(整合性確認)
ID=$(cat ${SYSD}/DATA/${CATEGORY}/TMP/${CUSTOMER_ID})

########################################
#バリデーション(必須入力確認)
#入力ありの場合、空ファイルが出力され、なしの場合、そのフィールド名が記載される
cat $tmp-post | awk '$2=="_" && $1=="FIRST_NAME"{print $1}'             > $tmp-need-VALID1
cat $tmp-post | awk '$2=="_" && $1=="GIVEN_NAME"{print $1}'             > $tmp-need-VALID2
cat $tmp-post | awk '$2=="_" && $1=="EMAIL"{print $1}'                  > $tmp-need-VALID3
cat $tmp-post | awk '$2=="_" && $1=="PASSWORD"{print $1}'               > $tmp-need-VALID4
cat $tmp-post | awk '$2=="_" && $1=="PASSWORD_CONFIRMATION"{print $1}'  > $tmp-need-VALID5
cat $tmp-post | awk '$2=="_" && $1=="PHONE"{print $1}'                  > $tmp-need-VALID6

########################################
#バリデーション(データ属性)
#FIRST NAME length <=2 =>20
VALID1=$(cat $tmp-value1)
if [ "${#VALID1}" -lt 2 ] || [ "${#VALID1}" -gt 20 ] ; then
    echo "legth NG" > $tmp-attr-VALID1
fi
#GIVEN NAME length <=2 =>20
VALID2=$(cat $tmp-value2)
if [ "${#VALID2}" -lt 2 ] || [ "${#VALID2}" -gt 20 ] ; then
    echo "legth NG" > $tmp-attr-VALID2
fi
#PASSWORD length <=8 
VALID4=$(cat $tmp-value4)
if [ "${#VALID4}" -lt 8 ] ; then
    echo "legth NG" > $tmp-attr-VALID4
fi
#PASSWORD CONFIRMATION =PASSWORD 
VALID5=$(cat $tmp-value5)
if [ "${VALID5}" != "${VALID4}" ] ; then
    echo "CONFIRMATION NG" > $tmp-attr-VALID5
fi

#PHONE numeric only
VALID6=$(cat $tmp-value6 | awk '/[^0-9]/{print}')
if [ -n "${VALID6}" ] ; then
    echo "not only numeric" > $tmp-attr-VALID6
fi

########################################
#バリデーション(EMAIL重複確認)
#1.顧客番号 2.姓 3.名 4.EMAIL 5.Phone 6.作成日時 7.更新日時 8.削除フラグ
NOW_EMAIL=$(cat ${SYSD}/DATA/STUFF/USERS/LV3/${ID}_* | awk '{print $4}')
EMAIL=$(cat $tmp-value3)
if [ "${NOW_EMAIL}" != ${EMAIL} ]; then
    cat ${SYSD}/DATA/STUFF/USERS/LV3/*_stuff_* | awk '$4=="'"${EMAIL}"'"{print $0}' > $tmp-attr-VALID3
fi

########################################
#バリデーションエラー項目の確定
#FIRST_NAME
if [ -n "$(cat $tmp-need-VALID1)$(cat $tmp-attr-VALID1)" ] ; then 
    VALID1_disp='show'
else
    VALID1_disp='hidden'
fi
#GIVEN_NAME
if [ -n "$(cat $tmp-need-VALID2)$(cat $tmp-attr-VALID2)" ] ; then
    VALID2_disp='show'
else
    VALID2_disp='hidden'
fi
#EMAIL
if [ -n "$(cat $tmp-need-VALID3)" ] ; then
    VALID31_disp='show'
else
    VALID31_disp='hidden'
fi
#EMAIL Duplicate
if [ -n "$(cat $tmp-attr-VALID3)" ] ; then
    VALID32_disp='show'
else
    VALID32_disp='hidden'
fi
#PASSWORD
if [ -n "$(cat $tmp-need-VALID4)$(cat $tmp-attr-VALID4)" ] ; then
    VALID4_disp='show'
else
    VALID4_disp='hidden'
fi
#PASSWORD CONFIRMATION
if [ -n "$(cat $tmp-need-VALID5)$(cat $tmp-attr-VALID5)" ] ; then
    VALID5_disp='show'
else
    VALID5_disp='hidden'
fi

#PHONE
if [ -n "$(cat $tmp-need-VALID6)$(cat $tmp-attr-VALID6)" ] ; then
    VALID6_disp='show'
else
    VALID6_disp='hidden'
fi

########################################
#パスワードの暗号化
if [ "${VALID4}" = 'NOT_CHANGE' ]; then
    echo 'NOT_CHANGE' > $tmp-sha1
else
    echo $(sha1 $(cat $tmp-value4)) > $tmp-sha1
fi

########################################
#アクションの設定
echo ${VALID1_disp}${VALID2_disp}${VALID31_disp}${VALID32_disp}${VALID4_disp}${VALID5_disp}${VALID6_disp} | awk '{gsub(/hidden/,"",$1);print}' | awk '{print length($1)}' > $tmp-VALID-result
num=$(cat $tmp-VALID-result)
if [ $num -gt 0 ]; then
    ACTION=INPUT
else
    ACTION=CONFIRM
fi

########################################
#HTMLの設定
if [ $ACTION = 'INPUT' ] ; then
    cat ${SYSD}/APPLI/${CATEGORY}/${FUNC}/HTML/${ACTION}.HTML           |
    sed -e "s/###FIRST_NAME_ERR###/${VALID1_disp}/"                     |
    sed -e "s/###GIVEN_NAME_ERR###/${VALID2_disp}/"                     |
    sed -e "s/###EMAIL_ERR###/${VALID31_disp}/"                         |
    sed -e "s/###EMAIL_DUPLECATED###/${VALID32_disp}/"                  |
    sed -e "s/###PHONE_ERR###/${VALID6_disp}/"                          |
    sed -e "s/###PASSWORD_ERR###/${VALID4_disp}/"                       |
    sed -e "s/###PASSWORD_CONFIRMATION_ERR###/${VALID4_disp}/"          |
    sed -e "s/###FIRST_NAME_VALUE###/$(cat $tmp-value1)/"               |
    sed -e "s/###GIVEN_NAME_VALUE###/$(cat $tmp-value2)/"               |
    sed -e "s/###EMAIL_VALUE###/$(cat $tmp-value3)/"                    |
    sed -e "s/###PHONE_VALUE###/$(cat $tmp-value6)/"                    |
    sed -e "s/###PASSWORD_VALUE###/NOT_CHANGE/"                         |
    sed -e "s/###CUSTOMER_ID###/${CUSTOMER_ID}/"                        |
    sed -e "s/###PASSWORD_CONFIRMATION_VALUE###/NOT_CHANGE/"            > $tmp-html
else
    cat ${SYSD}/APPLI/${CATEGORY}/${FUNC}/HTML/${ACTION}.HTML           |
    sed -e "s/###CUSTOMER_ID_NOT_MATCH###//"                            |
    sed -e "s/###FIRST_NAME_LABEL###/$(cat $tmp-value1)/"               |
    sed -e "s/###GIVEN_NAME_LABEL###/$(cat $tmp-value2)/"               |
    sed -e "s/###EMAIL_LABEL###/$(cat $tmp-value3)/"                    |
    sed -e "s/###PHONE_LABEL###/$(cat $tmp-value6)/"                    |
    sed -e "s/###PASSWORD_LABEL###/********/"                           |
    sed -e "s/###FIRST_NAME_VALUE###/$(cat $tmp-value1)/"               |
    sed -e "s/###GIVEN_NAME_VALUE###/$(cat $tmp-value2)/"               |
    sed -e "s/###EMAIL_VALUE###/$(cat $tmp-value3)/"                    |
    sed -e "s/###PHONE_VALUE###/$(cat $tmp-value6)/"                    |
    sed -e "s/###CUSTOMER_ID###/${CUSTOMER_ID}/"                        |
    sed -e "s/###PASSWORD_VALUE###/$(cat $tmp-sha1)/"                   > $tmp-html
fi
exit 0
#########################################
#page name
echo "Customer edit" > $tmp-pagename

#########################################
#ending
echo "OK"
exit 0
