#!/bin/bash -evx
#

########################################
# OPERATION_CATEGORY EDIT COMPLETE.CGI
#
#   引数
#       $1:プロセスID
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
DATAD=${SYSD}/DATA/${CATEGORY}/LISTS

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

#######################################
#フォームの入力値を取得
nameread OPERATION_CATEGORY_NM_EN $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value1
nameread OPERATION_CATEGORY_NM_JP $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value2

########################################
#バリデーションを設定

#OPERATION_CATEGORY_NM_EN
cat $tmp-value1 | awk '{print sprintf("OPERATION_CATEGORY_NM_EN|ISNULL|%s",$1)}'                                >> $tmp-validation  #必須入力
cat $tmp-value1 | awk '{print sprintf("OPERATION_CATEGORY_NM_EN|LENGTH|%s,3,0",$1)}'                            >> $tmp-validation  #3文字以上
cat $tmp-value1 | awk '{print sprintf("OPERATION_CATEGORY_NM_EN|ISEN_ISJP|EN,%s",$1)}'                          >> $tmp-validation  #英語のみ
cat $tmp-value1 | awk '{print sprintf("OPERATION_CATEGORY_NM_EN|DUPLICATE|OPERATION_CATEGORY,LISTS,2,%s",$1)}'  >> $tmp-validation  #重複確認

#OPERATION_CATEGORY_NM_JP
cat $tmp-value2 | awk '{print sprintf("OPERATION_CATEGORY_NM_JP|ISNULL|%s",$1)}'                                >> $tmp-validation  #必須入力
cat $tmp-value2 | awk '{print sprintf("OPERATION_CATEGORY_NM_JP|LENGTH|%s,3,0",$1)}'                            >> $tmp-validation  #3文字以上
cat $tmp-value2 | awk '{print sprintf("OPERATION_CATEGORY_NM_JP|ISEN_ISJP|JP,%s",$1)}'                          >> $tmp-validation  #日本語
cat $tmp-value2 | awk '{print sprintf("OPERATION_CATEGORY_NM_JP|DUPLICATE|OPERATION_CATEGORY,LISTS,3,%s",$1)}'  >> $tmp-validation  #重複確認

########################################
#バリデーションを実行
result=`${SYSD}/CGI/VALID/VALIDATION $1`

########################################
#バリデーション結果
if [ -n "$(grep "|NG" $tmp-valid-report)" ] ; then
    #Validation NG
    echo 'VALID_NG@' $(cat $tmp-valid-report) > $tmp-ajax-html
    #echo 2222 > $tmp-ajax-html
    exit 0
fi

#######################################
#フォームの入力値を取得
NUM=$(nameread OPERATION_CATEGORY_ID $tmp-post)
OPERATION_CATEGORY_NM_EN=$(cat $tmp-value1)
OPERATION_CATEGORY_NM_JP=$(cat $tmp-value2)

########################################
#既存データから作成日時取得、現在日時を更新日時とする
ls ${DATAD}/LV1/${NUM}_operation_category_* | cut -d'_' -f5 | sort -nk1,1 | head -n 1 > $tmp-create

########################################
#日付を設定
CREATE_DATE=$(cat $tmp-create)
UPDATE_DATE=$(date +%Y%m%d%H%M%S)

########################################
#更新者の取得
CREATE_USER=$(cat ${DATAD}/LV3/${NUM}* | awk '{print $5}')
UPDATE_USER=$(cat ${SYSD}/SESSION/$(session_get 'sureshot_stuff_session_id'))

########################################
#　　作業カテゴリのデータ操作
########################################

########################################
#該当のデータ操作をロック
LOCK=`${SYSD}/CGI/LOCK/LOCK $1 'OPERATION_CATEGORY' ${NUM}`
LOCK_STATUS=$(echo $LOCK | cut -d'.' -f4)
[ ${LOCK_STATUS} != 'LOCKED' ] && exit 0 || :

########################################
#入力値を一時ファイル化
#operation_category_id	operation_category_name	create_date	update_date	create_user	update_user	del_flg
echo ${NUM} ${OPERATION_CATEGORY_NM_EN} ${OPERATION_CATEGORY_NM_JP} ${CREATE_DATE} ${UPDATE_DATE} ${CREATE_USER} ${UPDATE_USER} 0 > $tmp-operation-category

########################################
#データ格納
#LV1:原始データとして、ファイル追加のみを行う
mv $tmp-operation-category ${DATAD}/LV1/${NUM}_operation_category_${UPDATE_DATE}

#LV2:変更されたデータとファイルを入れ替える
cat ${DATAD}/LV1/${NUM}_operation_category_${UPDATE_DATE} | awk '{$NF=""; print $0}' > ${DATAD}/LV2/${NUM}_operation_category_${UPDATE_DATE}
ls ${DATAD}/LV2/${NUM}_* | sort -nk1 | head -n 1 > $tmp-delete
rm -f $(cat $tmp-delete)

#LV3:LV2のコピー
cp -p ${DATAD}/LV2/${NUM}_operation_category_${UPDATE_DATE} ${DATAD}/LV3/${NUM}_operation_category_${UPDATE_DATE}
ls ${DATAD}/LV3/${NUM}_* | sort -nk1 | head -n 1 > $tmp-delete
rm -f $(cat $tmp-delete)

########################################
#データ操作ロックを解除
UNLOCK_STATUS=`${SYSD}/CGI/LOCK/UNLOCK $1 'OPERATION_CATEGORY' ${NUM}`
[ ${UNLOCK_STATUS} != 'UNLOCK'] && exit 0 || :

########################################
#LV3一覧3データ配置
#なにがしかのカテゴリNoの下にあるLV3データをかき集め、
#ファイルパスからカテゴリNoを、
#ファイルデータからオペ番号を

#紐付けたマップを作成
ls ${SYSD}/DATA/OPERATION_LIST/LISTS/*/LV3/*[^_d] | awk '{split($0,ary,"/"); print ary[7], ary[9]}' | cut -d'_' -f1 | LANG=C sort -k1 > $tmp-cate-list-map

#オペカテゴリ一覧
cat ${SYSD}/DATA/OPERATION_CATEGORY/LISTS/LV3/*[^_d] | awk '{print $1,$2}' | LANG=C sort -k1 > $tmp-cate-all

#オペ一覧
cat ${SYSD}/DATA/OPERATION_LIST/LISTS/*/LV3/*[^_d] | LANG=C sort -k1 > $tmp-ope-all

#JOIN
#マップとカテゴリ
LANG=C join -1 1 -2 1 $tmp-cate-list-map $tmp-cate-all | LANG=C sort -k2 > $tmp-ope-category

#カテゴリとオペ一覧
LANG=C join -1 2 -2 1 $tmp-ope-category $tmp-ope-all > $tmp-operations

#カテゴリ情報とマッピングしたオペ一覧をLISTS/LV3へ配置
rm -f ${SYSD}/DATA/OPERATION_LIST/LISTS/LV3/operations_*
mv $tmp-operations ${SYSD}/DATA/OPERATION_LIST/LISTS/LV3/operations_${CREATE_DATE}

########################################
#
echo "111"> $tmp-ajax-html

########################################
#ending
echo "OK"
exit 0
