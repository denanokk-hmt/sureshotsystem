#!/bin/bash -evx
#

########################################
# OPERATION_CATEGORY NEW COMPLETE.CGI
#
#   引数
#       $1:プロセスID
#
#	Written by hiramatsu


########################################
#基本設定
SYSD=$(cd $(dirname $0) && pwd | awk '{print substr($0, 0, index($0, "sureshotsystem")+13)}')
#exec 2> ${SYSD}/LOG/LOG.$(basename $0).$(date +%Y%m%d).$(date +%H%M%S).$$
tmp=/tmp/tmp_$1
LANG=ja_JP.UTF-8
#PATH=/home/:/home/UTL:/home/TOOL/open-usp-tukubai-2014061402/COMMANDS:$PATH
CATEGORY=`cat $tmp-category`
FUNC=`cat $tmp-func`
DATAD=${SYSD}/DATA/${CATEGORY}/LISTS

########################################
#Check error
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
cat <<- FIN
	Context-type: text/html
	NG input
FIN
	cat $tmp-result
	exit 1
}

#######################################
#フォームの入力値を取得
nameread OPERATION_CATEGORY_NM_EN_NEW $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value1
nameread OPERATION_CATEGORY_NM_JP_NEW $tmp-post | awk '{gsub(/^\_$/,"",$1);print}' > $tmp-value2

########################################
#バリデーションを設定

#OPERATION_CATEGORY_NM_EN
cat $tmp-value1 | awk '{print sprintf("OPERATION_CATEGORY_NM_EN|ISNULL|%s",$1)}'                                >> $tmp-validation  #必須入力
cat $tmp-value1 | awk '{print sprintf("OPERATION_CATEGORY_NM_EN|LENGTH|%s,3,0",$1)}'                            >> $tmp-validation  #3文字以上
cat $tmp-value1 | awk '{print sprintf("OPERATION_CATEGORY_NM_EN|ISEN_ISJP|EN,%s",$1)}'                          >> $tmp-validation  #英語のみ
cat $tmp-value1 | awk '{print sprintf("OPERATION_CATEGORY_NM_EN|DUPLICATE|OPERATION_CATEGORY,LISTS,2,%s",$1)}'  >> $tmp-validation  #重複確認

#OPERATION_CATEGORY_NM_JP
cat $tmp-value2 | awk '{print sprintf("OPERATION_CATEGORY_NM_JP|ISNULL|%s",$1)}'                                >> $tmp-validation  #必須入力
cat $tmp-value2 | awk '{print sprintf("OPERATION_CATEGORY_NM_JP|LENGTH|%s,3,0",$1)}'                            >> $tmp-validation  #3文字以上
cat $tmp-value2 | awk '{print sprintf("OPERATION_CATEGORY_NM_JP|ISEN_ISJP|JP,%s",$1)}'                          >> $tmp-validation  #日本語
cat $tmp-value2 | awk '{print sprintf("OPERATION_CATEGORY_NM_JP|DUPLICATE|OPERATION_CATEGORY,LISTS,3,%s",$1)}'  >> $tmp-validation  #重複確認

########################################
#バリデーションを実行
result=`${SYSD}/CGI/VALID/VALIDATION $1`

########################################
#バリデーション結果
if [ -n "$(grep "|NG" $tmp-valid-report)" ] ; then
    #Validation NG
    echo 'VALID_NG@' $(cat $tmp-valid-report) > $tmp-ajax-html
    #echo 2222 > $tmp-ajax-html
    exit 0
fi

#########################################
##新規作業番号を確定する
NEW_NUM=$(${SYSD}/CGI/NUMBER/NUMBER $1)

#######################################
#フォームの入力値を取得
OPERATION_CATEGORY_NM_EN=$(cat $tmp-value1)
OPERATION_CATEGORY_NM_JP=$(cat $tmp-value2)

########################################
#日付を設定
CREATE_DATE=$(date +%Y%m%d%H%M%S)
UPDATE_DATE=$CREATE_DATE

########################################
#更新者の取得
CREATE_USER=$(cat ${SYSD}/SESSION/$(session_get 'sureshot_stuff_session_id'))
UPDATE_USER=${CREATE_USER}

########################################
#カテゴリディレクトリを作成する
result=`${SYSD}/CGI/DATA/DFS_NEW $$ ${DATAD} ${DATAD}`

########################################
#オペリストディレクトリを作成する
result=`${SYSD}/CGI/DATA/DFS_NEW $$ ${SYSD}/DATA/OPERATION_LIST/LISTS ${SYSD}/DATA/OPERATION_LIST/LISTS`

########################################
#オペリスト格納用カテゴリDirを作成
result=`${SYSD}/CGI/DATA/DFS_NEW $$ ${SYSD}/DATA/OPERATION_LIST/LISTS/${NEW_NUM} ${SYSD}/DATA/OPERATION_LIST/LISTS/${NEW_NUM}`

########################################
#オペディテールディレクトリを作成する
result=`${SYSD}/CGI/DATA/DFS_NEW $$ ${SYSD}/DATA/OPERATION_DETAIL/LISTS ${SYSD}/DATA/OPERATION_DETAIL/LISTS`

########################################
#オペディテール格納用カテゴリDirを作成
result=`${SYSD}/CGI/DATA/DFS_NEW $$ ${SYSD}/DATA/OPERATION_DETAIL/LISTS/${NEW_NUM} ${SYSD}/DATA/OPERATION_DETAIL/LISTS/${NEW_NUM}`

########################################
#入力値を一時ファイル化
#operation_category_id	operation_category_nm_en  operation_category_nm_jp 	create_date	update_date	create_user	update_user	del_flg
echo ${NEW_NUM} ${OPERATION_CATEGORY_NM_EN} ${OPERATION_CATEGORY_NM_JP} ${CREATE_DATE} ${UPDATE_DATE} ${CREATE_USER} ${UPDATE_USER} 0 > $tmp-operation-category

########################################
#データ格納
#LV1:原始データとして、ファイル追加のみを行う
mv $tmp-operation-category ${DATAD}/LV1/${NEW_NUM}_operation_category_${CREATE_DATE}

#LV2
#削除フラグは除外-->dファイルとして扱う
cat ${DATAD}/LV1/${NEW_NUM}_operation_category_${CREATE_DATE} | awk '{$NF=""; print $0}' > ${DATAD}/LV2/${NEW_NUM}_operation_category_${CREATE_DATE}

#LV3
#LV2のコピー
cp -p ${DATAD}/LV2/${NEW_NUM}_operation_category_${CREATE_DATE} ${DATAD}/LV3/${NEW_NUM}_operation_category_${CREATE_DATE}

########################################
#Get records
cat ${SYSD}/DATA/${CATEGORY}/LISTS/LV3/*[^_d]       |
LANG=C sort -nk1,1                                  |
juni                                                > $tmp-records
# 1;カテゴリ番号 2;カテゴリ名
mojihame -lRECORDS ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/RECORDS.HTML $tmp-records > $tmp-table-records

########################################
# 改行文字を「\\n」という3文字の文字列に置換
TABLE_RECORDS=`awk -F\n -v ORS='\\\\n' '{print}' $tmp-table-records`

########################################
#tableにrecordsを嵌め込む
cat ${SYSD}/APPLI/${CATEGORY}/LISTS/HTML/TABLE.HTML           > $tmp-table
sed -e "s|###TABLE_RECORDS###|${TABLE_RECORDS}|g" $tmp-table  > $tmp-ajax-html

########################################
#ending
echo "OK"
exit 0
